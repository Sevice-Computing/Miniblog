/*
 * Blog API
 *
 * This is a mini blog.
 *
 * API version: 1.0.0
 * Contact: chris-ju@qq.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"AddArticle",
		strings.ToUpper("Post"),
		"/api/article/",
		AddArticle,
	},

	Route{
		"DeleteArticle",
		strings.ToUpper("Delete"),
		"/api/article/{articleID}",
		DeleteArticle,
	},

	Route{
		"GetAllArticle",
		strings.ToUpper("Get"),
		"/api/article/",
		GetAllArticle,
	},

	Route{
		"GetArticleByID",
		strings.ToUpper("Get"),
		"/api/article/{articleID}",
		GetArticleByID,
	},

	Route{
		"GetArticleByTag",
		strings.ToUpper("Get"),
		"/api/article/tag/{tagID}",
		GetArticleByTag,
	},

	Route{
		"GetArticleByUser",
		strings.ToUpper("Get"),
		"/api/article/user/{userID}",
		GetArticleByUser,
	},

	Route{
		"UpdateArticle",
		strings.ToUpper("Put"),
		"/api/article/{articleID}",
		UpdateArticle,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/api/user/",
		CreateUser,
	},

	Route{
		"GetUserbyID",
		strings.ToUpper("Get"),
		"/api/user/{userID}",
		GetUserbyID,
	},

	Route{
		"QueryUser",
		strings.ToUpper("Get"),
		"/api/user/",
		QueryUser,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/api/user/",
		UpdateUser,
	},
}
